import{a1 as k,P as u}from"./index.4a74404e.js";import{a as _}from"./axios.6e1fcf85.js";const f="https://api.metcarob.com/property_backend/v0",l={infoAPIPrefix:{url:"/public/api/info",add_token:!1},loginAPIPrefix:{url:"/public/api/login",add_token:!1},privateUserAPIPrefix:{url:"/private/api/user",add_token:!0},privateAdminAPIPrefix:{url:"/private/api/admin",add_token:!0}},o=Object.freeze({notconnected:0,connecting:1,connected:2,failed:3,logininprogress:4,loggedin:5});function m(e,n){return Object.keys(e).filter(function(t){return e[t]===n})[0]}function d(){return{pims:{state:""}}}function g(){return{login_token:"",refresh_token:""}}function h(){return{api_calls_to_make:[],running:!1}}const v=60*60*42;function p({frontend_instance:e,refresh_token:n,user_id:t,server_info_response:i}){const r=parseInt(i.data.Derived.APIAPP_REFRESH_TOKEN_TIMEOUT)/v,s={frontend_instance:e,refresh_token:n,user_id:t};u.set("loginRefreshToken",s,{secure:!window.location.href.includes("localhost"),expires:r})}function P(){return u.has("loginRefreshToken")}function I(){return u.get("loginRefreshToken")}const T=k("backendConnectionStore",{state:()=>({connection_state:{state:o.notconnected,error:"",server_info_response:{}},user_profile:d(),login_info:g(),api_caller:h()}),getters:{security_role_cansave(e){return this.isLoggedin?this.hasRole({role:e.connection_state.server_info_response.data.Derived.security_role_cansave}):!1},frontendInstance(e){return new URL(window.location.href).host==="evernetproperties.com"?"prod":"dev"},connectionStateString(e){let n=m(o,e.connection_state.state);return e.connection_state.state===o.failed&&(n+=" ("+e.connection_state.error+")"),n+" ("+this.frontendInstance+")"},isConnected(e){return!(e.connection_state.state===o.notconnected||e.connection_state.state===o.connecting)},isLogininprogress(e){return e.connection_state.state===o.logininprogress},isLoggedin(e){return e.connection_state.state===o.loggedin},hasRole(e){const n=this;return function({role:t}){return n.isLoggedin?e.user_profile.roles.includes(t):!1}}},actions:{connect(){if(this.connection_state.state===o.connecting){console.log("backend_connection Call to connect while already connecting - ignoring call");return}if(this.connection_state.state===o.notconnected){var e={method:"GET",url:f+l.infoAPIPrefix.url+"/serverinfo"};_(e).then(n=>{this._connection_complete_success(n)},n=>{this._connection_complete_fail(n)})}},_connection_complete_success(e){if(this.connection_state.state=o.connected,this.connection_state.error="",this.connection_state.server_info_response=e,P()){const t=I();if(this.frontendInstance!==t.frontend_instance){console.log("Read a refresh token cookie but frontend instance mismatched",t.frontend_instance);return}var n=this;this.connection_state.state=o.logininprogress,n.get_new_token_using_refresh_token({user_id:t.user_id,refresh_token:t.refresh_token,success_fn:function(){n.connection_state.state=o.loggedin,console.log("Sucessful login")},fail_fn:function(){n.connection_state.state=o.connected,console.log("Refresh token failed")}})}},_connection_complete_fail(e){this.connection_state.state=o.failed,this.connection_state.error=JSON.stringify(e),this.connection_state.server_info_response={}},login(){this.connection_state.state=o.logininprogress,window.google.accounts.id.initialize({client_id:"954557855733-9fovnaaj81f4cpbceqfpn72i2e8oksaa.apps.googleusercontent.com",callback:this._login_callback_from_google}),window.google.accounts.id.prompt()},_login_callback_from_google(e){const n={frontend_instance:this.frontendInstance,google_response:e};var t={method:"POST",url:f+l.loginAPIPrefix.url+"/login",data:n};_(t).then(i=>{this._login_complete_success(i)},i=>{console.log("Error resposne from login - ",i.response),this.connection_state.state=o.connected})},_login_complete_success(e){this.connection_state.state=o.loggedin,this.user_profile=e.data.user_profile,this.login_info.login_token=e.data.login_token,this.login_info.refresh_token=e.data.refresh_token,p({frontend_instance:this.frontendInstance,refresh_token:e.data.refresh_token,user_id:this.user_profile.id,server_info_response:this.connection_state.server_info_response})},logout(){this.connection_state.state=o.connected,this.user_profile=d(),this.login_info=g(),this.api_caller=h()},update_user_profile({user_profile:e,then:n}){this.user_profile=e,typeof n!="undefined"&&n()},call_api({apiprefix:e,url:n,method:t,data:i,callback:r}){this.api_caller.api_calls_to_make.push({apiprefix:e,url:n,method:t,data:i,callback:r}),this.api_caller.running||(this.api_caller.running=!0,this.process_all_api_calls())},process_all_api_calls(){if(this.api_caller.api_calls_to_make.length===0){this.api_caller.running=!1;return}const e=this.api_caller.api_calls_to_make.shift();this.process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:!1})},process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:n}){const t=this,i={ok:function(s){e.callback.ok(s),t.process_all_api_calls()},error:function(s){if(s.response.status===401&&!n){console.log("API Error - got 401 trying to update refresh token"),t.get_new_token_using_refresh_token({user_id:t.user_profile.id,refresh_token:t.login_info.refresh_token,success_fn:function(){t.process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:!0})},fail_fn:function(){console.log("Refresh token failed - logging out user"),t.api_caller.running=!1,t.logout()}});return}console.log("error response",s.response.status),e.callback.error(s),t.process_all_api_calls()}};var r={method:e.method,url:f+l[e.apiprefix].url+e.url,data:e.data,headers:{"Content-Type":"application/json"}};if(l[e.apiprefix].add_token){if(!this.isLoggedin){i.error({message:"Need to be logged in to make this call"});return}r.headers.Authorization="Bearer "+this.login_info.login_token}_(r).then(s=>{i.ok(s)},s=>{i.error(s)})},get_new_token_using_refresh_token({user_id:e,refresh_token:n,success_fn:t,fail_fn:i}){const r={frontend_instance:this.frontendInstance,user_id:e,refresh_token:n};var s={method:"POST",url:f+l.loginAPIPrefix.url+"/refresh",data:r};const a=this;_(s).then(c=>{a.user_profile=c.data.user_profile,a.login_info.login_token=c.data.login_token,a.login_info.refresh_token=c.data.refresh_token,p({frontend_instance:a.frontendInstance,refresh_token:c.data.refresh_token,user_id:a.user_profile.id,server_info_response:a.connection_state.server_info_response}),t()},c=>{i()})}}});export{T as u};
