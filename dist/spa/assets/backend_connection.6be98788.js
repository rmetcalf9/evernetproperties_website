import{a1 as r}from"./index.1e34c3a7.js";import{a as i}from"./axios.6e1fcf85.js";const s="https://api.metcarob.com/property_backend/v0",e=Object.freeze({notconnected:0,connecting:1,connected:2,failed:3,logininprogress:4,loggedin:5});function a(n,t){return Object.keys(n).filter(function(o){return n[o]===t})[0]}const g=r("backendConnectionStore",{state:()=>({connection_state:{state:e.notconnected,error:"",server_info_response:{}}}),getters:{frontendInstance(n){return new URL(window.location.href).host==="evernetproperties.com"?"prod":"dev"},connectionStateString(n){let t=a(e,n.connection_state.state);return n.connection_state.state===e.failed&&(t+=" ("+n.connection_state.error+")"),t+" ("+this.frontendInstance+")"},isConnected(n){return!(n.connection_state.state===e.notconnected||n.connection_state.state===e.connecting)},isLogininprogress(n){return n.connection_state.state===e.logininprogress},isLoggedin(n){return n.connection_state.state===e.loggedin}},actions:{connect(){if(this.connection_state.state===e.connecting){console.log("backend_connection Call to connect while already connecting - ignoring call");return}if(this.connection_state.state===e.notconnected){var n={method:"GET",url:s+"/public/api/info/serverinfo"};i(n).then(t=>{this._connection_complete_success(t)},t=>{this._connection_complete_fail(t)})}},_connection_complete_success(n){this.connection_state.state=e.connected,this.connection_state.error="",this.connection_state.server_info_response=n},_connection_complete_fail(n){this.connection_state.state=e.failed,this.connection_state.error=JSON.stringify(n),this.connection_state.server_info_response={}},login(){this.connection_state.state=e.logininprogress,window.google.accounts.id.initialize({client_id:"954557855733-9fovnaaj81f4cpbceqfpn72i2e8oksaa.apps.googleusercontent.com",callback:this._login_callback_from_google}),window.google.accounts.id.prompt()},_login_callback_from_google(n){const t={frontend_instance:this.frontendInstance,google_response:n};var o={method:"POST",url:s+"/public/api/login/login",data:t};i(o).then(c=>{console.log("XXX",c),this.connection_state.state=e.loggedin},c=>{console.log("Error resposne from login - ",c.response),this.connection_state.state=e.connected})},logout(){this.connection_state.state=e.connected}}});export{g as u};
