import{a1 as p}from"./index.e57f4910.js";import{a as c}from"./axios.6e1fcf85.js";const l="https://api.metcarob.com/property_backend/v0",a={infoAPIPrefix:{url:"/public/api/info",add_token:!1},loginAPIPrefix:{url:"/public/api/login",add_token:!1},privateUserAPIPrefix:{url:"/private/api/user",add_token:!0},privateAdminAPIPrefix:{url:"/private/api/admin",add_token:!0}},o=Object.freeze({notconnected:0,connecting:1,connected:2,failed:3,logininprogress:4,loggedin:5});function u(e,n){return Object.keys(e).filter(function(i){return e[i]===n})[0]}function _(){return{pims:{state:""}}}function f(){return{login_token:"",refresh_token:""}}function g(){return{api_calls_to_make:[],running:!1}}const k=p("backendConnectionStore",{state:()=>({connection_state:{state:o.notconnected,error:"",server_info_response:{}},user_profile:_(),login_info:f(),api_caller:g()}),getters:{frontendInstance(e){return new URL(window.location.href).host==="evernetproperties.com"?"prod":"dev"},connectionStateString(e){let n=u(o,e.connection_state.state);return e.connection_state.state===o.failed&&(n+=" ("+e.connection_state.error+")"),n+" ("+this.frontendInstance+")"},isConnected(e){return!(e.connection_state.state===o.notconnected||e.connection_state.state===o.connecting)},isLogininprogress(e){return e.connection_state.state===o.logininprogress},isLoggedin(e){return e.connection_state.state===o.loggedin},hasRole(e){const n=this;return function({role:i}){return n.isLoggedin?(console.log(e.user_profile),!0):!1}}},actions:{connect(){if(this.connection_state.state===o.connecting){console.log("backend_connection Call to connect while already connecting - ignoring call");return}if(this.connection_state.state===o.notconnected){var e={method:"GET",url:l+a.infoAPIPrefix.url+"/serverinfo"};c(e).then(n=>{this._connection_complete_success(n)},n=>{this._connection_complete_fail(n)})}},_connection_complete_success(e){this.connection_state.state=o.connected,this.connection_state.error="",this.connection_state.server_info_response=e},_connection_complete_fail(e){this.connection_state.state=o.failed,this.connection_state.error=JSON.stringify(e),this.connection_state.server_info_response={}},login(){this.connection_state.state=o.logininprogress,window.google.accounts.id.initialize({client_id:"954557855733-9fovnaaj81f4cpbceqfpn72i2e8oksaa.apps.googleusercontent.com",callback:this._login_callback_from_google}),window.google.accounts.id.prompt()},_login_callback_from_google(e){const n={frontend_instance:this.frontendInstance,google_response:e};var i={method:"POST",url:l+a.loginAPIPrefix.url+"/login",data:n};c(i).then(t=>{this._login_complete_success(t)},t=>{console.log("Error resposne from login - ",t.response),this.connection_state.state=o.connected})},_login_complete_success(e){this.connection_state.state=o.loggedin,this.user_profile=e.data.user_profile,this.login_info.login_token=e.data.login_token,this.login_info.refresh_token=e.data.refresh_token},logout(){this.connection_state.state=o.connected,this.user_profile=_(),this.login_info=f(),this.api_caller=g()},update_user_profile({user_profile:e}){this.user_profile=e},call_api({apiprefix:e,url:n,method:i,data:t,callback:r}){this.api_caller.api_calls_to_make.push({apiprefix:e,url:n,method:i,data:t,callback:r}),this.api_caller.running||(this.api_caller.running=!0,this.process_all_api_calls())},process_all_api_calls(){if(this.api_caller.api_calls_to_make.length===0){this.api_caller.running=!1;return}const e=this.api_caller.api_calls_to_make.shift();this.process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:!1})},process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:n}){const i=this,t={ok:function(s){e.callback.ok(s),i.process_all_api_calls()},error:function(s){if(s.response.status===401&&!n){console.log("API Error - got 401 trying to update refresh token"),i.get_new_token_using_refresh_token({success_fn:function(){i.process_all_api_calls_make_individual_call({cur_api_call_to_make:e,refresh_tried:!0})}});return}console.log("error response",s.response.status),e.callback.error(s),i.process_all_api_calls()}};var r={method:e.method,url:l+a[e.apiprefix].url+e.url,data:e.data,headers:{"Content-Type":"application/json"}};if(a[e.apiprefix].add_token){if(!this.isLoggedin){t.error({message:"Need to be logged in to make this call"});return}r.headers.Authorization="Bearer "+this.login_info.login_token}c(r).then(s=>{t.ok(s)},s=>{t.error(s)})},get_new_token_using_refresh_token({success_fn:e}){const n={frontend_instance:this.frontendInstance,user_id:this.user_profile.id,refresh_token:this.login_info.refresh_token};var i={method:"POST",url:l+a.loginAPIPrefix.url+"/refresh",data:n};const t=this;c(i).then(r=>{t.user_profile=r.data.user_profile,t.login_info.login_token=r.data.login_token,t.login_info.refresh_token=r.data.refresh_token,e()},r=>{console.log("Refresh token failed - logging out user"),t.api_caller.running=!1,t.logout()})}}});export{k as u};
